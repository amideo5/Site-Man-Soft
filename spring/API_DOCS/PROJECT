Project Controller

Base URL: /api/projects

1. Create a Project
Endpoint: /api/projects
Method: POST
Description: Creates a new project.

Request Body:
`json`
{
  "id": <Long>,
  "name": <String>,
  "description": <String>,
  "startDate": <String>,  // ISO 8601 format (e.g., "2025-01-01T12:00:00Z")
  "endDate": <String>     // ISO 8601 format
}
Response:
Status Code: 201 Created
Body: Returns the created project.
`json`
{
  "id": <Long>,
  "name": <String>,
  "description": <String>,
  "startDate": <String>,
  "endDate": <String>
}

2. Update a Project
Endpoint: /api/projects/{projectId}
Method: PUT
Description: Updates an existing project by its ID.

Path Parameter: projectId (Long): The ID of the project to update.
Request Body:
`json`
{
  "name": <String>,
  "description": <String>,
  "startDate": <String>,  // ISO 8601 format
  "endDate": <String>     // ISO 8601 format
}
Response:
Status Code: 200 OK
Body: Returns the updated project.
`json`
{
  "id": <Long>,
  "name": <String>,
  "description": <String>,
  "startDate": <String>,
  "endDate": <String>
}

3. Get a Project by ID
Endpoint: /api/projects/{projectId}
Method: GET
Description: Retrieves a specific project by its ID.

Path Parameter: projectId (Long): The ID of the project to retrieve.
Response:
Status Code: 200 OK
Body:
`json`
{
  "id": <Long>,
  "name": <String>,
  "description": <String>,
  "startDate": <String>,
  "endDate": <String>
}
Status Code: 404 Not Found
Returns no body if the project is not found.

4. Get All Projects
Endpoint: /api/projects
Method: GET
Description: Retrieves all projects.

Response:
Status Code: 200 OK
Body: Returns a list of projects.
`json`
[
  {
    "id": <Long>,
    "name": <String>,
    "description": <String>,
    "startDate": <String>,
    "endDate": <String>
  },
  ...
]

5. Delete a Project
Endpoint: /api/projects/{projectId}
Method: DELETE
Description: Deletes a project by its ID.

Path Parameter: projectId (Long): The ID of the project to delete.
Response: Status Code: 204 No Content