Resource Allocation Controller

Base URL: /api/resource-allocations

1. Create a Resource Allocation
Endpoint: /api/resource-allocations
Method: POST
Description: Creates a new resource allocation.

Request Body:
`json`
{
  "id": <Long>,             // (optional) ID of the allocation
  "projectId": <Long>,      // ID of the associated project
  "resourceId": <Long>,     // ID of the allocated resource
  "allocationPercentage": <Double>,  // Percentage of allocation (e.g., 50.0 for 50%)
  "startDate": <String>,    // ISO 8601 format (e.g., "2025-01-01T12:00:00Z")
  "endDate": <String>       // ISO 8601 format
}
Response:
Status Code: 201 Created
Body: Returns the created resource allocation.
`json`
{
  "id": <Long>,
  "projectId": <Long>,
  "resourceId": <Long>,
  "allocationPercentage": <Double>,
  "startDate": <String>,
  "endDate": <String>
}

2. Update a Resource Allocation
Endpoint: /api/resource-allocations/{allocationId}
Method: PUT
Description: Updates an existing resource allocation.

Path Parameter: allocationId (Long): The ID of the resource allocation to update.
Request Body:
`json`
{
  "projectId": <Long>,      // ID of the associated project (optional)
  "resourceId": <Long>,     // ID of the allocated resource (optional)
  "allocationPercentage": <Double>,  // Updated percentage of allocation
  "startDate": <String>,    // Updated start date in ISO 8601 format
  "endDate": <String>       // Updated end date in ISO 8601 format
}
Response:
Status Code: 200 OK
Body: Returns the updated resource allocation.
'json`
{
  "id": <Long>,
  "projectId": <Long>,
  "resourceId": <Long>,
  "allocationPercentage": <Double>,
  "startDate": <String>,
  "endDate": <String>
}

3. Get Resource Allocation by ID
Endpoint: /api/resource-allocations/{allocationId}
Method: GET
Description: Retrieves a specific resource allocation by its ID.

Path Parameter: allocationId (Long): The ID of the resource allocation to retrieve.
Response:
Status Code: 200 OK
Body:
`json`
{
  "id": <Long>,
  "projectId": <Long>,
  "resourceId": <Long>,
  "allocationPercentage": <Double>,
  "startDate": <String>,
  "endDate": <String>
}
Status Code: 404 Not Found
Returns no body if the allocation is not found.

4. Get All Resource Allocations
Endpoint: /api/resource-allocations
Method: GET
Description: Retrieves all resource allocations.

Response:
Status Code: 200 OK
Body: Returns a list of all resource allocations.
`json`
[
  {
    "id": <Long>,
    "projectId": <Long>,
    "resourceId": <Long>,
    "allocationPercentage": <Double>,
    "startDate": <String>,
    "endDate": <String>
  },
  ...
]

5. Delete a Resource Allocation
Endpoint: /api/resource-allocations/{allocationId}
Method: DELETE
Description: Deletes a specific resource allocation by its ID.

Path Parameter: allocationId (Long): The ID of the resource allocation to delete.
Response: Status Code: 204 No Content
